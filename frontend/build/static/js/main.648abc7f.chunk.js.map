{"version":3,"sources":["components/AddTodo.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","addTodo","useState","title","setTitle","Form","onSubmit","e","preventDefault","completed","Group","Control","type","id","placeholder","onChange","target","value","Todo","editTodo","deleteTodo","show","setShow","complete","setComplete","newTitle","handleClose","Row","className","Col","md","style","color","onClick","cursor","Modal","onHide","Header","closeButton","borderColor","Title","Body","controlId","Label","background","border","borderBottom","Footer","Button","variant","editTodoHandler","App","todos","setTodos","getTodos","a","axios","get","response","data","console","log","useEffect","newTodo","post","todo","put","delete","Container","Card","map","index","description","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.648abc7f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport './style.css'\r\n\r\n\r\nconst AddTodo = ({ addTodo }) => {\r\n\r\n\tconst [title, setTitle] = useState('')\r\n\r\n\r\n\tconst addTodoHandler = e => {\r\n\t\te.preventDefault()\r\n\t\taddTodo({\r\n\t\t\ttitle,\r\n\t\t\tcompleted: false,\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={addTodoHandler}>\r\n\t\t\t<Form.Group>\r\n\t\t\t  <Form.Control type='text' id=\"input_clr\" placeholder='Enter Todo Title' onChange={e => setTitle(e.target.value)} />\r\n\t\t\t</Form.Group>\t\t\t\t\r\n\t\t</Form>\r\n\t)\r\n}\r\n\r\nexport default AddTodo","import React, { useState } from 'react'\r\nimport { Row, Col, Form, Button, Modal } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n// Icons\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\nimport DeleteOutlineRoundedIcon from '@mui/icons-material/DeleteOutlineRounded';\r\nimport CheckCircleOutlineRoundedIcon from '@mui/icons-material/CheckCircleOutlineRounded';\r\n\r\n\r\nconst Todo = ({ id, title, editTodo, deleteTodo }) => {\r\n    const [show, setShow] = useState(false);\r\n\tconst [complete, setComplete] = useState(false)\r\n\r\n    const [newTitle, setTitle] = useState(title)\r\n\r\n    const handleClose = () => {\r\n    \tsetShow(false);\r\n    \tsetTitle(title)\r\n    }\r\n    \r\n    const handleShow = () => setShow(true);\r\n\r\n    const editTodoHandler = (title) => {\r\n    \thandleClose()\r\n    \tconst todo = {\r\n    \t\tid,\r\n    \t\ttitle,\r\n    \t}\r\n    \teditTodo(todo)\r\n    \tsetTitle(title)\r\n    }\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t  <Row className='pt-3 border-bottom border-dark'>\r\n\t\t    <Col md={1}>\r\n\t\t    <Form>\r\n\t\t      <CheckCircleOutlineRoundedIcon \r\n\t\t\t  \tstyle={{color:\"grey\"}}\r\n\t\t        type='checkbox'\r\n\t\t        onClick={() => setComplete(!complete)}\r\n\t\t\t\tclassName={complete === true ? ('text-success') : ('text-secondary')}\r\n\t\t      />\r\n\t\t    </Form>\r\n\t\t    </Col>\r\n\r\n\t\t    <Col>\r\n\t\t\t  {complete === true ? (\r\n\t\t\t\t<strike className=\"text-secondary\">{title}</strike>\r\n\t\t\t  ) : (\r\n\t\t\t\t<h5>{title}</h5>\r\n\t\t\t  )}\r\n\t\t    </Col>\r\n\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={1} className=\"mx-1\">\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<EditRoundedIcon onClick={handleShow} style={{cursor: \"pointer\"}} color=\"success\" />\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={1}>\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<DeleteOutlineRoundedIcon onClick={() => deleteTodo(id)} style={{cursor: \"pointer\"}} color=\"error\" />\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t  </Row>\r\n\r\n\t\t  <Modal show={show} onHide={handleClose}>\r\n\t        <Modal.Header closeButton className=\"bg-dark text-white\" style={{borderColor:\"grey\"}}>\r\n\t          <Modal.Title>Edit Todo</Modal.Title>\r\n\t        </Modal.Header>\r\n\t        <Modal.Body className=\"bg-dark text-white\">\r\n\t        \t<Form>\r\n\t\t\t\t\t<Form.Group controlId='title'>\r\n\t\t\t\t\t  <Form.Label>Change The Title</Form.Label>\r\n\t\t\t\t\t  <Form.Control type='text' value={newTitle} onChange={e => setTitle(e.target.value)} style={{background:\"#252525\", border:\"none\", borderBottom: \"1px solid #bbb\", color:\"#fff\"}} />\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t</Form>\r\n\t        </Modal.Body>\r\n\t        <Modal.Footer className=\"bg-dark\" style={{borderColor:\"grey\"}}>\r\n\t\t\t  <Button variant=\"success\" onClick={() => editTodoHandler(newTitle)}>\r\n\t            Save Changes\r\n\t          </Button>\r\n\t          <Button variant=\"secondary\" onClick={handleClose}>\r\n\t            Close\r\n\t          </Button>\r\n\t        </Modal.Footer>\r\n\t      </Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState, useEffect } from 'react'\r\nimport './App.css';\r\nimport AddTodo from './components/AddTodo'\r\nimport Todo from './components/Todo'\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap'\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport Link from '@mui/material/Link';\r\nimport axios from 'axios'\r\n\r\n\r\nfunction App() {\r\n\t\r\n\tconst [todos, setTodos] = useState([])\r\n\tconst [complete, setComplete] = useState(false)\r\n\r\n\tconst getTodos = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get('/api/todo/')\r\n\t\t\tconst { data } = response\r\n\t\t\tsetTodos(data)\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetTodos()\r\n\t}, [])\r\n\r\n\tconst addTodo = async newTodo => {\r\n\t\ttry {\r\n\t\t\tconsole.log(newTodo)\r\n\t\t\tawait axios.post('/api/todo/', newTodo)\r\n\t\t\tgetTodos()\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\r\n\tconst editTodo = async todo => {\r\n\t\ttry {\r\n\t\t\tawait axios.put(`/api/todo/${todo.id}/`, todo)\r\n\t\t\tgetTodos()\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\r\n\tconst deleteTodo = async id => {\r\n\t\ttry {\r\n\t\t\tawait axios.delete(`/api/todo/${id}/`)\r\n\t\t\tgetTodos()\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row className='justify-content-center pt-5'>\r\n\t\t\t\t\t<Col md={6} className='shadw pb-3 px-3 rounded bg_clr'>\r\n\t\t\t\t\t\t<Card className='p-4 mt-4 border-0' id=\"bg_clr\">\r\n\t\t\t\t\t\t\t<h3>Todo List</h3>\r\n\r\n\t\t\t\t\t\t\t<AddTodo addTodo={addTodo} />\r\n\r\n\t\t\t\t\t\t\t{todos.map((todo, index) => (\r\n\t\t\t\t\t\t\t\t<Todo key={index} id={todo.id} title={todo.title} description={todo.description} editTodo={editTodo} deleteTodo={deleteTodo} />\r\n\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}